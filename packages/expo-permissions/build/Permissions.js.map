{"version":3,"file":"Permissions.js","sourceRoot":"","sources":["../src/Permissions.ts"],"names":[],"mappings":"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","sourcesContent":["import { coalesceExpirations, coalesceStatuses } from './CoalescedPermissions';\nimport Permissions from './ExpoPermissions';\nimport { Platform } from 'react-native';\n\nimport {\n  PermissionResponse,\n  PermissionType,\n  PermissionMap,\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionInfo,\n} from './Permissions.types';\n\nexport {\n  PermissionStatus,\n  PermissionResponse,\n  PermissionExpiration,\n  PermissionMap,\n  PermissionInfo,\n  PermissionType,\n};\n\nexport const CAMERA = 'camera';\nexport const CAMERA_ROLL = 'cameraRoll';\nexport const AUDIO_RECORDING = 'audioRecording';\nexport const LOCATION = 'location';\nexport const USER_FACING_NOTIFICATIONS = 'userFacingNotifications';\nexport const NOTIFICATIONS = 'notifications';\nexport const CONTACTS = 'contacts';\nexport const CALENDAR = 'calendar';\nexport const REMINDERS = 'reminders';\nexport const SYSTEM_BRIGHTNESS = 'systemBrightness';\n\nexport async function getAsync(...types: PermissionType[]): Promise<PermissionResponse> {\n  if (Platform.OS === \"ios\") {\n    return await _handleMultiPermissionsRequestIOSAsync(types, Permissions.getAsync);\n  }\n  return await _handlePermissionsRequestAsync(types, Permissions.getAsync);\n}\n\nexport async function askAsync(...types: PermissionType[]): Promise<PermissionResponse> {\n  if (Platform.OS === \"ios\") {\n    return await _handleMultiPermissionsRequestIOSAsync(types, Permissions.askAsync);\n  }\n  return await _handlePermissionsRequestAsync(types, Permissions.askAsync);\n}\n\nasync function _handleSinglePermissionRequestIOSAsync(\n  type: PermissionType,\n  handlePermission: (type: PermissionType) => Promise<PermissionInfo>\n): Promise<PermissionInfo> {\n  return handlePermission(type);\n}\n\nasync function _handleMultiPermissionsRequestIOSAsync(\n  types: PermissionType[],\n  handlePermission: (type: PermissionType) => Promise<PermissionInfo>\n): Promise<PermissionResponse> {\n  if (!types.length) {\n    throw new Error('At least one permission type must be specified');\n  }\n\n  return await Promise.all(\n    types.map(async type => ({\n      [type]: await _handleSinglePermissionRequestIOSAsync(type, handlePermission),\n    }))\n  )\n    .then(permissions => permissions.reduce((permission, acc) => ({ ...acc, ...permission }), {}))\n    .then(permissions => ({\n      status: coalesceStatuses(permissions),\n      expires: coalesceExpirations(permissions),\n      permissions: { ...permissions },\n    }));\n}\n\n\nasync function _handlePermissionsRequestAsync(\n  types: PermissionType[],\n  handlePermissions: (types: PermissionType[]) => Promise<PermissionMap>\n): Promise<PermissionResponse> {\n  if (!types.length) {\n    throw new Error('At least one permission type must be specified');\n  }\n\n  const permissions = await handlePermissions(types);\n  return {\n    status: coalesceStatuses(permissions),\n    expires: coalesceExpirations(permissions),\n    permissions,\n  };\n}"]}